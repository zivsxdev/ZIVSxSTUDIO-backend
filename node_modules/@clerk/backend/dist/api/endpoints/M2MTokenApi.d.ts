import type { M2MToken } from '../resources/M2MToken';
import { AbstractAPI } from './AbstractApi';
type CreateM2MTokenParams = {
    /**
     * Custom machine secret key for authentication.
     */
    machineSecretKey?: string;
    secondsUntilExpiration?: number | null;
    claims?: Record<string, unknown> | null;
};
type RevokeM2MTokenParams = {
    /**
     * Custom machine secret key for authentication.
     */
    machineSecretKey?: string;
    /**
     * Machine-to-machine token ID to revoke.
     */
    m2mTokenId: string;
    revocationReason?: string | null;
};
type VerifyM2MTokenParams = {
    /**
     * Custom machine secret key for authentication.
     */
    machineSecretKey?: string;
    /**
     * Machine-to-machine token secret to verify.
     */
    secret: string;
};
export declare class M2MTokenApi extends AbstractAPI {
    #private;
    create(params?: CreateM2MTokenParams): Promise<M2MToken>;
    revoke(params: RevokeM2MTokenParams): Promise<M2MToken>;
    verifySecret(params: VerifyM2MTokenParams): Promise<M2MToken>;
}
export {};
//# sourceMappingURL=M2MTokenApi.d.ts.map